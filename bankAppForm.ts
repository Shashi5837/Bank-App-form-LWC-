import { createElement } from 'lwc';
import BankAppForm from 'c/bankAppForm';

/*describe('c-bank-app-form', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    it('TODO: test case generated by CLI command, please fill in test logic', () => {
        // Arrange
        const element = createElement('c-bank-app-form', {
            is: BankAppForm
        });

        // Act
        document.body.appendChild(element);

        // Assert
        // const div = element.shadowRoot.querySelector('div');
        expect(1).toBe(1);
    });

    test('2+1 is 3',()=>{
        const num=2+1;
        expect(num).toBe(3);
    }

    ) 
});*/


/*describe('c-bank-app-from suite',()=>{
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while(document.body.firstChild) {
          document.body.removeChild(document.body.firstChild);
        }
    })

        it('displays unit status with input change event', () => {
            const element = createElement('c-bank-app-form', {
              is: BankAppForm
            });
            document.body.appendChild(element);
           // const div = element.shadowRoot.querySelector('div.new');
              
            const inputElement = element.shadowRoot.querySelector('lightning-input.slds-text-title_bold second');
            inputElement.value = (9110482242);
            inputElement.dispatchEvent(new CustomEvent('change'));
           
           // const text = element.shadowRoot.querySelector('lightning-input.slds-text-title_bold first');
            return Promise.resolve().then(() => {
              expect(inputElement).toBe(9110482242);
            });
          });


    test('first case', ()=>{
       const element=document.querySelector('c-bank-app-form')
        const firstdiv=element.shadowRoot.querySelector('lightning-input')
        firstdiv.value='shashi';
        firstdiv.dispatchEvent(new CustomEvent('change'));
        return Promise.resolve().then(()=>{
            expect(firstdiv.textContent).toBe('');
        })
       
    })

    it('second case', ()=>{
        const element1 = createElement('c-bank-app-form', {
            is: BankAppForm
        });
        document.body.appendChild(element1);
        const firstdiv=element1.shadowRoot.querySelector('lightning-combobox.slds-text-title_bold third')
        //firstdiv.value="karnataka"
        if(firstdiv){
            firstdiv.value('karnataka')``
        }
        firstdiv.dispatchEvent(new CustomEvent('change'));
        const text = element1.shadowRoot.querySelector('lightning-input.slds-text-title_bold third');
     //   return Promise.resolve().then(()=>{
            expect(text.textContent).toBe('karnataka');
      //  })
       
    })

    it('should set correct error message', () => {
        const errorMessage = 'Error Message';
       // const { shadowRoot } = createComponent();
        const element = createElement('c-bank-app-form', {
            is: BankAppForm
          });
       
        const childComponent = element.shadowRoot.querySelector('c-bank-app-form');
        
        childComponent.dispatchEvent(new CustomEvent('error', {
        detail: { value : errorMessage }
        }));
        
        const inputBody = element.shadowRoot.querySelector('lightning-input.slds-text-title_bold first');
        expect(inputBody.value).toBe(errorMessage)
        });
    })*/
    
